name: build
on:
  push:

env:
  ASSETS_URL: "https://api.github.com/repos/melpon/wandbox-builder/releases/32402124/assets"
  UPLOAD_URL: "https://uploads.github.com/repos/melpon/wandbox-builder/releases/32402124/assets{?name,label}"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  gcc:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 10.2.0
          - 9.3.0
          - 8.4.0
          - 7.5.0
          - 6.5.0
          - 5.5.0
          - 4.9.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  clang:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 11.1.0
          - 10.0.1
          - 9.0.1
          - 8.0.1
          - 7.1.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  boost:
    needs: [gcc, clang]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.75.0 gcc 10.2.0
          - 1.75.0 gcc 9.3.0
          - 1.75.0 gcc 8.4.0
          - 1.75.0 gcc 7.5.0
          - 1.75.0 gcc 6.5.0
          - 1.75.0 gcc 5.5.0
          - 1.75.0 gcc 4.9.4
          - 1.75.0 clang 11.1.0
          - 1.75.0 clang 10.0.1
          - 1.75.0 clang 9.0.1
          - 1.75.0 clang 8.0.1
          - 1.75.0 clang 7.1.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  clisp:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2.49
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  cpython:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.9.3
          - 3.8.9
          - 3.7.10
          - 3.6.12
          - 2.7.18
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  crystal:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.0.0
          - 0.36.1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  dmd:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2.096.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  dotnetcore:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.0.201
          - 3.1.407
          - 2.1.814
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  erlang:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 23.3.1
          - 22.3.4.16
          - 21.3.8.22
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  fpc:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.2.0
          - 3.0.4
          - 2.6.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  ghc:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 9.0.1
          - 8.10.4
          - 8.8.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  go:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.16.3
          - 1.15.11
          - 1.14.15
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  lazyk:
    strategy:
      fail-fast: false
      matrix:
        version:
          - nover
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  ldc:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.25.1
          - 1.24.0
          - 1.23.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  lua:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.4.3
          - 5.3.6
          - 5.2.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  luajit:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2.0.5
          - 2.0.4
          - 2.0.3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  mono:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 6.12.0.122
          - 5.20.1.34
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  mruby:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.0.0
          - 2.1.2
          - 1.4.1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  nim:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.4.6
          - 1.2.8
          - 1.0.10
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  nodejs:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 14.16.1
          - 12.22.1
          - 10.24.1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  ocaml:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 4.12.0
          - 4.11.2
          - 4.10.2
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  openjdk:
    strategy:
      fail-fast: false
      matrix:
        version:
          - jdk-15.0.3+2
          - jdk-14.0.2+12
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  openssl:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.1.1k
          - 1.0.2u
          - 0.9.8zh
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
